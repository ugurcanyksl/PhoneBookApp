// <auto-generated />
using System;
using ContactService.Contact.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ContactService.Contact.API.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    partial class ContactDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.ContactInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("InfoContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InfoType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("ContactInfos");
                });

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.ContactReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.ReportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContactReportId")
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalContacts")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPhoneNumbers")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContactReportId");

                    b.ToTable("ReportDetail");
                });

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.ContactInfo", b =>
                {
                    b.HasOne("PhoneBookMicroservices.Shared.Models.Person", null)
                        .WithMany("ContactInfos")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.ReportDetail", b =>
                {
                    b.HasOne("PhoneBookMicroservices.Shared.Models.ContactReport", null)
                        .WithMany("Details")
                        .HasForeignKey("ContactReportId");
                });

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.ContactReport", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("PhoneBookMicroservices.Shared.Models.Person", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
